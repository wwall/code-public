&НаСервере
Функция ТекстXML()
	
	Возврат "<?xml version=""1.0"" encoding=""UTF-8""?>
	|<test>
	|	test-test1
	|	<test-first atr=""1"">  test-test2 </test-first >
	|	<test-second atr=""2"">  test-test3 </test-second>
	| </test>";

КонецФункции


&НаСервере
Функция ВернутьОбъектXDTO(ИсточникXML,ИмяУзлаДляТекста="ВыделенныйТекст")
	
	ТекстXSLT = СтрШаблон("<?xml version=""1.0"" encoding=""UTF-8""?>
	|<xsl:stylesheet version=""1.1"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns:fn=""http://www.w3.org/2005/xpath-functions"">
	|	<xsl:strip-space elements=""*""/>
	|<xsl:output method=""xml"" version=""1.0"" encoding=""UTF-8"" />
	|	<xsl:template match=""@* | node()"">
	|		<xsl:choose>
	|			<xsl:when test=""self::text()"">
	|				<xsl:element name=""%1"">
	|					<xsl:value-of select=""normalize-space(.)""/>
	|				</xsl:element>
	|			</xsl:when>
	|			<xsl:otherwise>
	|				<xsl:copy>
	|					<xsl:apply-templates select=""@* | node() ""/>
	|				</xsl:copy>
	|			</xsl:otherwise>
	|		</xsl:choose>
	|	</xsl:template>
	|</xsl:stylesheet>",ИмяУзлаДляТекста);
	
	Преобразование = Новый ПреобразованиеXSL;
	Преобразование.ЗагрузитьИзСтроки(ТекстXSLT);
	
	Если ТипЗнч(ИсточникXML) = Тип("ЧтениеXML") Тогда
		ЗаписьXML = Новый ЗаписьXML;
		ЗаписьXML.УстановитьСтроку();
		Преобразование.ПреобразоватьИзСтроки(ИсточникXML,ЗаписьXML);
		СтрокаРезультат = ЗаписьXML.Закрыть();	
	ИначеЕсли ТипЗнч(ИсточникXML) = Тип("Строка") Тогда
		СтрокаРезультат = Преобразование.ПреобразоватьИзСтроки(ИсточникXML);
	иначе
		ВызватьИсключение "Неподдерживаемый тип источника XML "+ТипЗнч(ИсточникXML);
	КонецЕсли;	
	
	Чтение = Новый ЧтениеXML;
	Чтение.УстановитьСтроку(СтрокаРезультат);
	ОбъектЧтения = ФабрикаXDTO.ПрочитатьXML(Чтение);
	
	Возврат ОбъектЧтения;
КонецФункции

&НаСервере
Функция Повторить(Количество)
	Результат = "";
	Для х = 0 По Количество Цикл
		Результат = Результат + Символы.Таб;
	КонецЦикла;
	Возврат Результат;
КонецФункции


&НаСервере
Функция ОбойтиОбъект(ОбъектXDTO,Смещение,Имя)
	Результат = Новый Массив;
	Для Каждого Свойство из ОбъектXDTO.Свойства() Цикл
		Если ТипЗнч(ОбъектXDTO[Свойство.Имя]) = Тип("ОбъектXDTO") Тогда 
			Результат.Добавить(ОбойтиОбъект(ОбъектXDTO[Свойство.Имя],Смещение+1,Свойство.Имя));
		Иначе
			Результат.Добавить(Повторить(Смещение)+Имя+"."+Свойство.Имя+" = "+ОбъектXDTO[Свойство.Имя]);
		КонецЕсли;
	КонецЦикла;
	Возврат СтрСоединить(Результат,Символы.ПС);
КонецФункции

&НаСервере
Процедура ВывестиОбъект(ОбъектXDTO,Имя)
	Сообщить(ОбойтиОбъект(ОбъектXDTO,0,Имя));
КонецПроцедуры


&НаСервере
Процедура ЧтениеБезТекстаНаСервере()
	ТекстХМЛ = ТекстXML() ;
	Чтение = Новый ЧтениеXML;
	Чтение.УстановитьСтроку(ТекстХМЛ);
	Результат = ФабрикаXDTO.ПрочитатьXML(Чтение);
	ВывестиОбъект(Результат,"test");
КонецПроцедуры

&НаКлиенте
Процедура ЧтениеБезТекста(Команда)
	ЧтениеБезТекстаНаСервере();
КонецПроцедуры

&НаСервере
Процедура КорректноеЧтениеНаСервере()
	ТекстХМЛ = ТекстXML() ;
	Результат = ВернутьОбъектXDTO(ТекстХМЛ,"МойТекст");
	ВывестиОбъект(Результат,"test");
КонецПроцедуры

&НаКлиенте
Процедура КорректноеЧтение(Команда)
	КорректноеЧтениеНаСервере();
КонецПроцедуры
